<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      https://docs.oracle.com/javase/specs/jls/se11/html/index.html
    - the Sun Code Conventions at https://www.oracle.com/java/technologies/javase/codeconventions-contents.html
    - the Javadoc guidelines at
      https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html
    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/
    - some best practices
  Checkstyle is very configurable. Be sure to read the documentation at
  https://checkstyle.org (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  To suppress certain violations please review suppression filters.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        https://checkstyle.org/config.html#Checker
        <property name="basedir" value="${basedir}"/>
    -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.sun.suppressionfilter.config}"
                  default="checkstyle-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <module name="FileLength"/>
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See https://checkstyle.org/config_misc.html -->
    <!--<module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>-->

    <!-- Checks for Headers                                -->
    <!-- See https://checkstyle.org/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Naming Conventions.                  -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See https://checkstyle.org/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See https://checkstyle.org/config_sizes.html -->
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See https://checkstyle.org/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="ParameterAssignment"/>

        <!-- Checks for class design                         -->
        <!-- See https://checkstyle.org/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
            <property name="tokens" value="CTOR_DEF"/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
        <module name="SuppressionXpathFilter">
            <property name="file" value="${org.checkstyle.sun.suppressionxpathfilter.config}"
                      default="checkstyle-xpath-suppressions.xml"/>
            <property name="optional" value="true"/>
        </module>

        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>

        <module name="RegexpSinglelineJava">
            <property name="format" value="(.*)\.printStackTrace()"/>
            <property name="message" value="las excepciones deben ser manejadas apropiadamente (ej. lanzadas hacia arriba, o enviadas al log)"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <module name="FinalLocalVariable"/>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="TicTacToeOptions"/>
            <property name="packageName" value="tictactoe"/>
            <property name="abstractionType" value="class"/>
            <property name="privateFields" value="auto1:boolean, auto2:boolean, level:int"/>
            <property name="publicMethods" value="isAuto1:boolean, isAuto2:boolean, getLevel:int"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="TicTacToe"/>
            <property name="packageName" value="tictactoe"/>
            <property name="abstractionType" value="class"/>
            <property name="privateConstructors" value="(auto1:boolean;auto2:boolean;level:int)"/>
            <property name="publicStaticMethods" value="main(:String[]):void"/>
            <property name="privateMethods" value="start:void"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="ComponentFactory"/>
            <property name="packageName" value="tictactoe"/>
            <property name="abstractionType" value="class"/>
            <property name="privateConstructors" value="()"/>
            <property name="publicStaticMethods"
                      value="gameController(level:int;auto1:boolean;auto2:boolean):GameController"/>
            <property name="privateStaticMethods"
                      value="manualMoveSpec:ManualMoveSpec,
                             board:Board,
                             autoPlayerStrategy(level:int):AutoPlayerStrategy,
                             player(order:int;isAutoPlayer:boolean):Player"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="GameController"/>
            <property name="packageName" value="controller"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods"
                      value="doAutoMove(:Player):MoveStatus,
                             doManualMove(:Player;moveSpec:String):MoveStatus,
                             getBoardState:BoardState,
                             nextPlayer:Player"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="DefaultGameController"/>
            <property name="packageName" value="controller"/>
            <property name="abstractionType" value="class"/>
            <property name="implementsInterfaces" value="GameController"/>
            <property name="privateFields" value="currentPlayer1:boolean"/>
            <property name="publicConstructors" value="(:ManualMoveSpec;:Board;:AutoPlayerStrategy;:Player;:Player)"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="ManualMoveSpec"/>
            <property name="packageName" value="move"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods"
                      value="parse(:String):Optional&lt;Pair&lt;Row~Column&gt;&gt;"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="DefaultManualMoveSpec"/>
            <property name="packageName" value="move"/>
            <property name="abstractionType" value="class"/>
            <property name="implementsInterfaces" value="ManualMoveSpec"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="AutoPlayerStrategy"/>
            <property name="packageName" value="auto"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods" value="generateMove(:Player;:BoardState):Pair&lt;Row~Column&gt;"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="RandomAutoPlayerStrategy"/>
            <property name="packageName" value="auto"/>
            <property name="abstractionType" value="class"/>
            <property name="implementsInterfaces" value="AutoPlayerStrategy"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Player"/>
            <property name="packageName" value="player"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods"
                      value="getLabel:String,
                             isAuto:boolean,
                             getToken:Token"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="DefaultPlayer"/>
            <property name="packageName" value="player"/>
            <property name="abstractionType" value="class"/>
            <property name="implementsInterfaces" value="Player"/>
            <property name="publicConstructors" value="(:Token;auto:boolean;label:String)"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Board"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods"
                      value="applyMove(:Pair&lt;Row~Column&gt;;:Token):MoveStatus,
                             getCurrentBoardState:BoardState"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="BoardState"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="interface"/>
            <property name="interfaceMethods"
                      value="getPosition(:Pair&lt;Row~Column&gt;):Optional&lt;Token&gt;,
                             isFull:boolean,
                             getText:String"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="CountingBoard"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="class"/>
            <property name="implementsInterfaces" value="Board,BoardState"/>
            <property name="privateFields"
                      value="board:Map&lt;Pair&lt;Row~Column&gt;~Token&gt;,
                             rowCounts:Map&lt;Row~Integer&gt;,
                             colCounts:Map&lt;Column~Integer&gt;,
                             diagonal:int,
                             antiDiagonal:int,
                             freeCells:int"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Token"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="enum"/>
            <property name="enumValues" value="X,O"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Row"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="enum"/>
            <property name="enumValues" value="TOP,MIDDLE,BOTTOM"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="Column"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="enum"/>
            <property name="enumValues" value="LEFT,CENTER,RIGHT"/>
        </module>

        <module name="edu.tec.ic6821.checks.StructureCheck">
            <property name="name" value="MoveStatus"/>
            <property name="packageName" value="board"/>
            <property name="abstractionType" value="enum"/>
            <property name="enumValues"
                      value="TOKEN_SET,
                             BOX_OCCUPIED,
                             INVALID_POSITION,
                             O_WINS,
                             X_WINS,
                             GAME_TIED"/>
        </module>

        <module name="edu.tec.ic6821.checks.InstantiationCheck">
            <property name="ignore"
                      value="TicTacToe,
                             TicTacToeOptions,
                             ComponentFactory,
                             CountingBoardTest,
                             TokenTest,
                             DefaultGameControllerTest,
                             RandomAutoPlayStrategyTest,
                             DefaultManualMoveSpecTest,
                             DefaultPlayerTest,
                             ComponentFactoryTest"/>
            <property name="constructors"
                      value="TicTacToe,
                             TicTacToeOptions,
                             ComponentFactory,
                             CountingBoard,
                             DefaultGameController,
                             RandomAutoPlayerStrategy,
                             DefaultManualMoveSpec,
                             DefaultPlayer"/>
        </module>
    </module>

</module>